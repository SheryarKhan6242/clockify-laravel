$(function() {
    //PIE CHART
    c3.generate({
        bindto: "#time-status",
        data: {
            columns: [
                ["Present", 10],
                ["Absent", 15]
            ],
            type: "donut",
            tooltip: { show: !0 }
        },
        donut: { label: { show: !1 }, width: 18 },
        legend: { hide: !0 },
        color: { pattern: ["#274436;", "#27C278"] }
    }), d3.select("#time-status .c3-chart-arcs-title").style("font-family", "Rubik");


    //Sick leaves Pie chart
    c3.generate({
        bindto: "#sick-chart",
        data: {
            columns: [
                ["Availed", 10],
                ["Remaining", 15]
            ],
            type: "donut",
            tooltip: { show: !0 }
        },
        donut: { label: { show: !1 }, width: 18 },
        legend: { hide: !0 },
        color: { pattern: ["#8767CC26", "#8854F5"] }
    }), d3.select("#sick-chart .c3-chart-arcs-title").style("font-family", "Rubik");

    //Medical Reimbursement
    c3.generate({
        bindto: "#medical-chart",
        data: {
            columns: [
                ["Availed", 10],
                ["Remaining", 15]
            ],
            type: "donut",
            tooltip: { show: !0 }
        },
        donut: { label: { show: !1 }, width: 18 },
        legend: { hide: !0 },
        color: { pattern: ["#4094E20", "#4094E2"] }
    }), d3.select("#medical-chart .c3-chart-arcs-title").style("font-family", "Rubik");

    // Make an AJAX request to fetch the employee max working hours and show the chart
    var query = $('#emp-work-hours').val();
    $.ajax({
        url: 'ajax/get-emp-work-hours?filter=' + query + ' ',
        method: 'GET',
        success: function(response) {
            // Call the function to update the chart with the retrieved data
            updateChart(response);
        },
        error: function(error) {
            console.log(error);
        }
    });

    // Function to update the chart with the retrieved data
    function updateChart(data) {
        // Prepare the chart data(x-axis and y-axis)
        var chartData = {
            labels: data.labels,
            series: [data.series]
        };

        // Calculate the maximum value for y-axes
        var maxHours = Math.ceil(data.maxHours / 10) * 10;

        // Set the chart options(Bipolar chart eg from charlistjs documentation)
        var options = {
            high: maxHours,
            axisY: {
                labelInterpolationFnc: function(value) {
                    return value + 'h';
                }
            }
        };
        // Create the chart
        var chart = new Chartist.Bar('.emp-max-hours', chartData, options);
        // Find the maximum value and its index in the data.series array
        var maxBarValue = Math.max(...data.series);
        var maxBarIndex = data.series.indexOf(maxBarValue);

        // Change the stroke color of the bars
        chart.on('draw', function(data) {
            if (data.type === 'bar') {
                if (data.index === maxBarIndex) {
                    data.element.attr({
                        style: 'stroke: #27B9C2; width: 24px;' //For max Working hours change color code
                    });
                } else {
                    data.element.attr({
                        style: 'stroke: #3E6E75; width: 24px;' // For remaining Working hours bar keep same color code
                    });
                }
            }
        });
    }

    //Onchange Employee working hours
    $('#emp-work-hours').on('change', function() {
        // alert("changed");
        var query = $('#emp-work-hours').val();
        //Call monthly Ajax
        $.ajax({
            url: 'ajax/get-emp-work-hours?filter=' + query + ' ',
            method: 'GET',
            success: function(response) {
                // Call the function to update the chart with the retrieved data
                updateChart(response);
            },
            error: function(error) {
                console.log(error);
            }
        });
    });

});